services:
  frontend:
    build:
      context: ./FrontendAngular
    container_name: angular_app
    volumes:
      - ./FrontendAngular:/app
    working_dir: /app
    command: npm start --configuration=development
    ports:
      - "80:80"
    networks:
      - app_network
    depends_on:
      - python

  python:
    build:
      context: ./Backend
    container_name: python_app
    volumes:
      - ./Backend:/app
    working_dir: /app
    command: >
      sh -c "while ! nc -z mysql 3306; do sleep 1; done; python app.py"
    ports:
      - "5000:5000"
    networks:
      - app_network
    depends_on:
      - mysql
    
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./Backend/nginx.conf:/etc/nginx/nginx.conf  # Usa tu archivo de configuraci√≥n Nginx si tienes uno
    ports:
      - "8080:80"
    depends_on:
      - python
    networks:
      - app_network
  
  db:
    image: mysql:8.1.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: toor
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"
    depends_on:
      - db
    environment:
      PMA_HOST: db
    networks:
      - app_network

networks:
  app_network:
    driver: bridge